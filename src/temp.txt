 //                 <table className="table table-dark blog_table">
                //                     <thead>
                //                         <tr>
                //                             <th>#</th>
                //                             <th>Title</th>
                //                             <th>Category</th>
                //                             <th>Content</th>
                //                             <th>Author (Optional)</th>
                //                             <th>Action</th>
                //                             <th>Edit</th>
                //                             <th>View</th>
                //                         </tr>
                //                     </thead>
                //                     <tbody>
                //                         {blogs.map((blog, index) => (
                //                             <tr key={index}>
                //                                 <td>{index + 1}</td>
                //                                 <td>{blog.title}</td>
                //                                 <td>{blog.category}</td>
                //                                 {/* <td>{blog.content}</td> */}
                //                                 <td style={{ maxWidth: "200px", overflow: "hidden", textOverflow: "ellipsis", whiteSpace: "nowrap" }}>
                //     {blog.content}
                // </td>
                //                                 <td>{blog.author}</td>
                //                                 <td> <button className="btn btn-danger" onClick={() => removeItem(index)} > Remove </button> </td>
                //                                 <td><Link to={`/edit/${index}`}><button className='btn btn-success'>Edit</button></Link></td>
                //                                 <td><Link to={`/detail/${index}`}><button className='btn btn-primary'>View Details</button></Link></td>
                //                             </tr>
                //                         ))}
                //                     </tbody>
                //                 </table>






// App.jsx
import React, { useState } from "react";
import { Routes, Route } from "react-router-dom";
import Home from "./componments/Home";
import CreateBlog from "./componments/CreateBlog";
import Editblog from "./componments/Editblog";
import 'bootstrap/dist/css/bootstrap.min.css';
import './App.css'
import Blogdetail from "./componments/Blogdetail";

function App() {
  const [blogs, setBlogs] = useState([]); // Store blog posts

  const getdata = (value) => {
    setBlogs([...blogs, value]); // Append new blog to state
  }

  const removeItem = (id) => {
    setBlogs(blogs.filter((_, index) => index !== id));
  };

  const editItem = (id,updateddata) => {
    const newdata=blogs.map((item,index)=>  index===id ? updateddata : item
    )
    setBlogs(newdata)
  }
  

  return (
    <div>
      <Routes>
        <Route path="/" element={<Home blogs={blogs} removeItem={removeItem} />} />
        <Route path="create" element={<CreateBlog getdata={getdata} />} />
        <Route  path="/edit/:id" element={<Editblog blogs={blogs} editItem={editItem} />} />
        <Route  path="/detail/:id" element={<Blogdetail blogs={blogs}  />} />
      </Routes>
    </div>
  );
}

export default App;


// Home.jsx

import React from 'react';
import { Link } from 'react-router-dom';

const Home = ({ blogs, removeItem }) => {
    return (
        <div className="container p-3">
            <Link to="create">
                <button className="btn btn-primary px-3 py-2 mb-3">
                    Create a New Blog
                </button>
            </Link>

            <h2 className="mb-3">Submitted Blogs</h2>
            {blogs.length === 0 ? (
                <p>No blogs have been submitted yet.</p>
            ) : (
                <div className="row g-4">
                    {blogs.map((blog, index) => (
                        <div key={index} className="col-md-6 col-lg-4">
                            <div className="card h-100 shadow-sm border rounded">
                                <div className=" p-3">
                                    <h5><strong>Title:</strong> {blog.title}</h5>
                                    <p><strong>Category:</strong> {blog.category}</p>
                                    <p>
                                        <strong>Content:</strong> {blog.content.slice(0, 100).trim()}...
                                    </p>
                                    <p><strong>Author:</strong> {blog.author || "Anonymous"}</p>
                                    <div className="mt-auto d-flex justify-content-between">
                                        <Link to={`/edit/${index}`} className="btn btn-success">Edit</Link>
                                        <button className="btn btn-danger" onClick={() => removeItem(index)}>Delete</button>
                                        <Link to={`/detail/${index}`} className="btn btn-primary">Read More</Link>
                                    </div>
                                </div>
                            </div>
                        </div>
                    ))}
                </div>
            )}
        </div>
    );
};

export default Home;



//Blogdetail.jsximport React from "react";
import { useParams, useNavigate } from "react-router-dom";

const BlogDetail = ({ blogs }) => {
    const { id } = useParams();
    const blogIndex = parseInt(id, 10);
    const navigate = useNavigate();

    // Ensure blog exists
    if (!blogs[blogIndex]) {
        return <h2 className="error-message">Blog post not found</h2>;
    }

    const blogData = blogs[blogIndex];

    return (
        <div className="blog-detail-container">
            <h1 className="blog-title">Blog Detail Page</h1>
            <div className="blog-card">
                <h3><strong>Title:</strong> {blogData.title}</h3>
                <p><strong>Content:</strong> {blogData.content}</p>
                <p><strong>Author:</strong> {blogData.author || "Unknown"}</p>
            </div>
            <button className="btn back-btn" onClick={() => navigate("/")}>
                Back to Home
            </button>
        </div>
    );
};

export default BlogDetail;



//Editblog.jsx
import React, { useState } from 'react'
import { useNavigate, useParams } from 'react-router-dom'

const Editblog = ({ blogs, editItem }) => {

    const {id} = useParams()
    const blogIndex = parseInt(id)
    const navigate = useNavigate()
    const [blogData, setblogData] = useState(blogs[blogIndex])

    const handleChange = (e) => {
        setblogData({...blogData,[e.target.name]:e.target.value})
    }

    const handleSubmit = (e) => {
        e.preventDefault()
        editItem(blogIndex,blogData)
        navigate('/')
    }

    return (
        <div className='w-25 m-auto card p-3'>
            <form  onSubmit={handleSubmit}>
                <label>Title:</label>
                <input
                    type="text"
                    name="title"
                    className=" form-control"
                    value={blogData.title}
                    onChange={handleChange}
                />

                <label>Content:</label>
                <textarea
                    name="content"
                    value={blogData.content}
                    onChange={handleChange}
                    className=" form-control"
                />

                <label>Category:</label>
                <input
                    type="text"
                    name="category"
                    value={blogData.category}
                    className=" form-control"
                    onChange={handleChange}
                />

                <label>Author (Optional):</label>
                <input
                    type="text"
                    name="author"
                    value={blogData.author}
                    onChange={handleChange}
                    className=" form-control"
                />

                <input type="submit" value="Update Blog post" className="btn btn-primary my-2" />
            </form>
        </div>
    )
}

export default Editblog


// Create blog.jsx
import React from "react";
import { useFormik } from "formik";
import { useNavigate } from "react-router-dom";
import * as Yup from "yup";

const CreateBlog = ({ getdata }) => {
  const navigate = useNavigate();
  
  const initialValues = {
    title: "",
    content: "",
    category: "",
    author: "",
  };

  const validationSchema = Yup.object({
    title: Yup.string().min(5, "Title must be at least 5 characters").required("Title is required"),
    content: Yup.string().min(10, "Content must be at least 10 characters").required("Content is required"),
    category: Yup.string().required("Category is required"),
  });

  const { values, handleChange, handleSubmit, resetForm, errors, touched, handleBlur } = useFormik({
    initialValues,
    validationSchema,
    onSubmit: (values) => {
      getdata({ ...values, author: values.author.trim() || "Anonymous" });
      alert("Your Blog has been Created!");
      resetForm();
      navigate("/");
    },
  });

  return (
    <div className="create-blog-container">
      <button className="btn back-btn" onClick={() => navigate("/")}>
        ‚Üê Back to Home
      </button>

      <div className="blog-form-card">
        <h3 className="form-title ">Create Blog</h3>
        <form onSubmit={handleSubmit}>
          
          <label>Title:</label>
          <input 
            type="text" 
            name="title"
            className="form-control"
            value={values.title} 
            onChange={handleChange} 
            onBlur={handleBlur} 
          />
          {touched.title && errors.title && <div className="error-text">{errors.title}</div>}

          <label>Content:</label>
          <textarea 
            name="content" 
            className="form-control"
            value={values.content} 
            onChange={handleChange} 
            onBlur={handleBlur} 
          />
          {touched.content && errors.content && <div className="error-text">{errors.content}</div>}

          CreateBlog

          <label>Author (Optional):</label>
          <input 
            type="text" 
            name="author" 
            className="form-control"
            value={values.author} 
            onChange={handleChange} 
            onBlur={handleBlur} 
          />

          <input type="submit" value="Submit" className="btn submit-btn" />
        </form>
      </div>
    </div>
  );
};

export default CreateBlog;





import React, { useState } from "react";
import { Routes, Route } from "react-router-dom";
import Home from "./componments/Home";
import CreateBlog from "./componments/CreateBlog";
import Editblog from "./componments/Editblog";
import 'bootstrap/dist/css/bootstrap.min.css';
import './App.css'
import Blogdetail from "./componments/Blogdetail";

function App() {
  const [blogs, setBlogs] = useState([]); // Store blog posts

  const getdata = (value) => {
    setBlogs([...blogs, value]); // Append new blog to state
  }
 

  const removeItem = (id) => {
    setBlogs(blogs.filter((_, index) => index !== id));
  };

  const editItem = (id,updateddata) => {
    const newdata=blogs.map((item,index)=>  index===id ? updateddata : item
    )
    setBlogs(newdata)
  }

  

  return (
    <div>
      <Routes>
        <Route path="/" element={<Home blogs={blogs} removeItem={removeItem} />} />
        <Route path="create" element={<CreateBlog getdata={getdata} />} />
        <Route  path="/edit/:id" element={<Editblog blogs={blogs} editItem={editItem} />} />
        <Route  path="/detail/:id" element={<Blogdetail blogs={blogs}  />} />
      </Routes>
    </div>
  );
}

export default App;

import React from "react";
import { Link } from "react-router-dom";
import "../App.css"; // Custom CSS file

const Home = ({ blogs ,removeItem}) => {
    return (
        <div className="container mt-4">
            <div className="d-flex justify-content-between align-items-center">
                <h2>Submitted Blogs</h2>
                <Link to="/create">
                    <button className="btn btn-primary px-3 py-2">
                        Create a New Blog
                    </button>
                </Link>
            </div>

            {blogs.length === 0 ? (
                <p>No blogs have been submitted yet.</p>
            ) : (
                <div className="row blog">
                    {blogs.map((blog, index) => (
                        <div key={index} className="col-md-4">
                            <div className="card my-2 blog-card h-100 w-100">
                                <div className="card-body">
                                    <h5 className="card-title">{blog.title}</h5>
                                    <p className="card-text">
                                        <strong>Category:</strong> {blog.category}
                                    </p>
                                    <p className="card-text">
                                        <strong>Published On:</strong> {new Date(blog.date).toLocaleDateString()}
                                    </p>
                                    <p className="card-text">
                                        <strong>Short Description:</strong> {blog.content.length > 100 
                                            ? blog.content.substring(0, 100) + "..." 
                                            : blog.content}
                                    </p>
                                    <p className="card-text">
                                        <strong>Author:</strong> {blog.author || "Anonymous"}
                                    </p>
                                    <div className="mt-auto d-flex justify-content-between">
                                        <Link to={`/edit/${index}`} className="btn btn-success">Edit</Link>
                                        <button className="btn btn-danger" onClick={() => removeItem(index)}>Delete</button>
                                        <Link to={`/detail/${index}`} className="btn btn-primary">Read More</Link>
                                    </div>
                                </div>
                            </div>
                        </div>
                    ))}
                </div>
            )}
        </div>
    );
};

export default Home;

import React from "react";
import { useParams } from "react-router-dom";

const BlogDetail = ({ blogs }) => {
    const { id } = useParams();
    const blog = blogs[parseInt(id)];

    return (
        <div className="container w-50 mt-4">
            <h1>{blog.title}</h1>
            <p><strong>Category:</strong> {blog.category}</p>
            <p><strong>Published On:</strong> {new Date(blog.date).toLocaleDateString()}</p>
            <p><strong>Author:</strong> {blog.author || "Anonymous"}</p>
            <p><strong>Content:</strong> {blog.content}</p>
        </div>
    );
};

export default BlogDetail;

import React, { useState } from 'react'
import { useNavigate, useParams } from 'react-router-dom'

const Editblog = ({ blogs, editItem }) => {

    const { id } = useParams()
    const blogIndex = parseInt(id)
    const navigate = useNavigate()
    const [blogData, setblogData] = useState(blogs[blogIndex])

    const handleChange = (e) => {
        setblogData({ ...blogData, [e.target.name]: e.target.value })
    }

    const handleSubmit = (e) => {
        e.preventDefault()
        editItem(blogIndex, blogData)
        navigate('/')
    }

    return (
        <div className='w-25 m-auto card p-3'>
            <form onSubmit={handleSubmit}>
                <label>Title:</label>
                <input
                    type="text"
                    name="title"
                    className=" form-control"
                    value={blogData.title}
                    onChange={handleChange}
                />

                <label>Content:</label>
                <textarea
                    name="content"
                    value={blogData.content}
                    onChange={handleChange}
                    className=" form-control"
                />

                <label>Category:</label>
                <input
                    type="text"
                    name="category"
                    value={blogData.category}
                    className=" form-control"
                    onChange={handleChange}
                />


                <label>Author (Optional):</label>
                <input
                    type="text"
                    name="author"
                    value={blogData.author}
                    onChange={handleChange}
                    className=" form-control"
                />

                <input type="submit" value="Update Blog post" className="btn btn-primary my-2" />
            </form>
        </div>
    )
}

export default Editblog


import React from "react";
import { useFormik } from "formik";
import { useNavigate } from "react-router-dom";
import * as Yup from "yup";

const CreateBlog = ({ getdata }) => {
  const navigate = useNavigate();
  
  const initialValues = {
    title: "",
    content: "",
    category: "",
    author: "",
    date: new Date().toISOString(),  // Save current date
};


  const validationSchema = Yup.object({
    title: Yup.string().min(5, "Title must be at least 5 characters").required("Title is required"),
    content: Yup.string().min(10, "Content must be at least 10 characters").required("Content is required"),
    category: Yup.string().required("Category is required"),
  });

  const { values, handleChange, handleSubmit, resetForm, errors, touched, handleBlur } = useFormik({
    initialValues,
    validationSchema,
    onSubmit: (values) => {
      getdata({ ...values, author: values.author.trim() || "Anonymous" });
      alert("Your Blog has been Created!");
      resetForm();
      navigate("/");
    },
  });

  return (
    <div className="create-blog-container">
      <button className="btn back-btn" onClick={() => navigate("/")}>
        ‚Üê Back to Home
      </button>

      <div className="blog-form-card">
        <h3 className="form-title ">Create Blog</h3>
        <form onSubmit={handleSubmit}>
          
          <label>Title:</label>
          <input 
            type="text" 
            name="title"
            className="form-control"
            value={values.title} 
            onChange={handleChange} 
            onBlur={handleBlur} 
          />
          {touched.title && errors.title && <div className="error-text">{errors.title}</div>}

          <label>Content:</label>
          <textarea 
            name="content" 
            className="form-control"
            value={values.content} 
            onChange={handleChange} 
            onBlur={handleBlur} 
          />
          {touched.content && errors.content && <div className="error-text">{errors.content}</div>}

          <label>Category:</label>
          <select 
            name="category" 
            className="form-control"
            value={values.category}
            onChange={handleChange}
            onBlur={handleBlur}
          >
            <option value="">Select a category</option>
            <option value="Technology">Technology</option>
            <option value="Lifestyle">Lifestyle</option>
            <option value="Education">Education</option>
          </select>
          {touched.category && errors.category && <div className="error-text">{errors.category}</div>}

          <label>Author (Optional):</label>
          <input 
            type="text" 
            name="author" 
            className="form-control"
            value={values.author} 
            onChange={handleChange} 
            onBlur={handleBlur} 
          />

          <input type="submit" value="Submit" className="btn btn-primary mt-4" />
        </form>
      </div>
    </div>
  );
};

export default CreateBlog;

